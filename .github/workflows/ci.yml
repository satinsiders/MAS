name: CI

on:
  push:
    branches: [main, dev, feature/**]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-dev.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Lint (Ruff + Black + isort)
        run: |
          ruff check .
          black --check .
          isort --check-only .
      - name: Detect secrets
        run: detect-secrets scan --all-files
      - name: Run unit tests with coverage
        env:
          PYTHONPATH: "${{ github.workspace }}"
        run: |
          pytest -q --cov=virtual_department --cov-report=xml
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  coverage-badge:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: coverage-xml
      - uses: tj-actions/coverage-badge-py@v2
        with:
          coverage_regex: "TOTAL.*\\s+(\\d+%)"
      - uses: EndBug/add-and-commit@v9
        with:
          add: "*.svg"
          message: "chore(ci): update coverage badge [skip ci]"

  notify-failure:
    needs: [lint-and-test, coverage-badge]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "text": "\ud83d\udea8 CI failed on ${{ github.repository }} â€“ <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|details>"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_CI_WEBHOOK }}
